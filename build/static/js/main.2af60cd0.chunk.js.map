{"version":3,"sources":["components/teirSelection.js","components/featuredSellers.js","components/productFeatures.js","components/pageFooter.js","components/teikametricsIndexPage.js","components/teikametricsConfirmPage.js","App.js","serviceWorker.js","index.js"],"names":["TeirSelection","props","planIsYearly","react_default","a","createElement","Row","className","TeirConfig","map","tier","i","Col","md","key","Card","CardHeader","title","CardBody","CardTitle","price","yearly","monthly","CardSubtitle","CardText","spend","verb","Button","outline","color","onClick","handleSelectPlan","FeaturedSellers","Fragment","FeaturedAmazonSellers","highlight","src","alt","ProductFeatures","ProductFeaturesConfig","plan","icon","text","PageFooter","ListGroup","ListGroupItem","action","size","offset","TeikametricsIndexPage","state","e","this","setState","_this2","Container","fluid","switch_min_default","togglePlan","on","teirSelection","teir","productFeatures","featuredSellers","pageFooter","teirId","id","history","push","concat","React","Component","withRouter","TeikametricsConfirmPage","error","_this$props$match$par","match","params","_TeirConfig$filter","filter","t","Object","slicedToArray","console","log","_this$state","Alert","role","href","block","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2af60cd0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Col, Row,\n  Card, CardHeader, CardBody,\n  CardTitle, CardSubtitle, CardText,\n  Button\n  } from 'reactstrap'\n\nimport TeirConfig from './config/teirConfig'\n\nconst TeirSelection = (props) => {\n  const { planIsYearly } = props;\n\n  return (\n    <Row className=\"pricing-cards text-center\">\n      { TeirConfig.map( (tier, i) => (\n        <Col md=\"3\" className=\"pricing-card p-0 m-0 mb-3\" key={i}>\n          <Card className={'border-0'}>\n            <CardHeader className={'text-white ' + (planIsYearly ? 'bg-secondary' : 'bg-primary')}>\n              {tier.title}\n            </CardHeader>\n            <CardBody>\n              <CardTitle className=\"display-4\">${ (planIsYearly) ? tier.price.yearly : tier.price.monthly}</CardTitle>\n              <CardSubtitle>per {planIsYearly ? 'year' : 'month'}</CardSubtitle>\n              <hr />\n              <CardText>\n                {tier.spend.verb}{' '}\n                ${tier.spend.spend}{' '}\n                a {planIsYearly ? 'year' : 'month'}{' '}\n                in advertising spend.\n              </CardText>\n              <Button outline\n                className=\"mx-3\"\n                color={planIsYearly ? 'secondary' : 'primary'}\n                onClick={() => props.handleSelectPlan(tier)}>\n                Select Plan\n              </Button>\n            </CardBody>\n          </Card>\n        </Col>\n      ) ) }\n    </Row>\n  )\n}\n\nTeirSelection.propTypes = {\n  planIsYearly: PropTypes.bool.isRequired,\n  handleSelectPlan: PropTypes.func.isRequired\n}\n\nexport default TeirSelection;\n","import React from 'react';\nimport { Col, Row } from 'reactstrap'\n\nimport FeaturedAmazonSellers from './config/featuredAmazonSellers'\n\nconst FeaturedSellers = () => {\n  return (\n    <React.Fragment>\n      <Row>\n        <h2 className=\"mx-auto text-center\">\n          <small className=\"text-primary\">MEET OUR CUSTOMERS</small> <br />\n          A few of our growing list of successful Amazon sellers\n        </h2>\n      </Row>\n      <Row>\n        <Col md=\"2\" className=\"mx-auto\"><hr className=\"bg-primary\" /></Col>\n      </Row>\n      <Row className=\"flex-row align-items-stretch\">\n        { FeaturedAmazonSellers.map( (highlight, i) => {\n          return (\n            <Col md=\"3\" className=\"py-3 py-md-5 px-4 align-self-center\" key={i}>\n              <img className=\"d-block mx-auto img-fluid\" src={highlight.src} alt={highlight.alt} />\n            </Col>\n          )\n        }) }\n      </Row>\n    </React.Fragment>\n  )\n}\n\nexport default FeaturedSellers;\n","import React from 'react';\nimport { Col, Row } from 'reactstrap'\n\nimport ProductFeaturesConfig from './config/productFeaturesConfig'\n\nconst ProductFeatures = () => {\n  return (\n    <React.Fragment>\n      <Row>\n        <h2 className=\"text-left pb-3\">Included in all plans</h2>\n      </Row>\n      <Row className=\"text-left\">\n        { ProductFeaturesConfig.map( (plan, i) => (\n            <Col key={i} md=\"4\" className=\"pt-4\">\n              <Row>\n                <Col md=\"1\">\n                  <img className=\"d-block mx-auto mb-2 mb-md-0\" src={plan.icon} alt={plan.title} />\n                </Col>\n                <Col md=\"11\" className=\"text-center text-md-left\">\n                  <h5 className=\"text-primary mb-2\"> {plan.title} </h5>\n                  <p>{plan.text}</p>\n                </Col>\n              </Row>\n            </Col>\n          ) ) }\n      </Row>\n    </React.Fragment>\n  )\n}\n\nexport default ProductFeatures;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Row, Col,\n  Button,\n  ListGroup, ListGroupItem\n  } from 'reactstrap'\n\nconst PageFooter = (props) => (\n  <footer>\n    <Row>\n      <Col md=\"2\">\n        <ListGroup>\n          <ListGroupItem action>Optimize for</ListGroupItem>\n          <ListGroupItem action>FBA Insite</ListGroupItem>\n          <ListGroupItem action>Sponsored Products</ListGroupItem>\n        </ListGroup>\n      </Col>\n      <Col md=\"2\">\n        <ListGroup>\n          <ListGroupItem action>Sellers</ListGroupItem>\n        </ListGroup>\n      </Col>\n      <Col md=\"2\">\n        <ListGroup>\n          <ListGroupItem action>Agencies</ListGroupItem>\n        </ListGroup>\n      </Col>\n      <Col md=\"2\">\n        <ListGroup>\n          <ListGroupItem action>Resources</ListGroupItem>\n          <ListGroupItem action>Webinars & Ebooks</ListGroupItem>\n          <ListGroupItem action>Blog</ListGroupItem>\n        </ListGroup>\n      </Col>\n      <Col md=\"2\">\n        <ListGroup>\n          <ListGroupItem action>Company</ListGroupItem>\n        </ListGroup>\n      </Col>\n      <Col md=\"2\">\n        <Button color={props.planIsYearly ? 'secondary' : 'primary'} className=\"text-nowrap\">Free Demo</Button>\n      </Col>\n    </Row>\n\n    <hr />\n\n    <Row>\n      <Col md=\"6\" className=\"pt-sm-3\">\n        <img\n          className=\"img-fluid pt-3 pt-sm-0\"\n          src='/assets/teikametrics/logo.svg'\n          alt=\"logo\" />\n        <p className=\"text-muted pt-2\">\n          <small>Copyright © 2018 Tyler Wall</small>\n        </p>\n      </Col>\n\n      <Col md=\"6\" className=\"pt-sm-3\">\n        <Row className=\"pt-3 pt-sm-2 pull-right\">\n          <Col md={{ size: 3, offset: 1 }}><small>Privacy Policy</small></Col>\n          <Col md=\"4\"><small>Terms & Conditions</small></Col>\n          <Col md=\"4\">\n            <small>\n              Made with\n              {' '}<img src='/assets/teikametrics/footer/heart.svg' alt=\"love\" />\n              {' '}in Boston\n            </small>\n          </Col>\n          <Col md=\"12\">\n            <img\n              className=\"float-sm-right p-4\"\n              src=\"/assets/teikametrics/footer/socialicons.svg\"\n              alt=\"social icons\" />\n          </Col>\n        </Row>\n      </Col>\n\n    </Row>\n  </footer>\n)\n\nPageFooter.propTypes = {\n  planIsYearly: PropTypes.bool.isRequired\n}\n\nexport default PageFooter;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom'\nimport Switch from 'react-toggle-switch'\n\nimport TeirSelection from './teirSelection';\nimport FeaturedSellers from './featuredSellers';\nimport ProductFeatures from './productFeatures'\nimport PageFooter from './pageFooter';\n\nimport { Container, Row, Col, Button } from 'reactstrap'\n\nclass TeikametricsIndexPage extends React.Component {\n  state = {\n    planIsYearly: false\n  }\n\n  togglePlan(e) {\n    this.setState({ planIsYearly: !this.state.planIsYearly })\n  }\n\n  render() {\n    const { planIsYearly } = this.state;\n\n    return (\n      <Container fluid className=\"pb-4\">\n        <section>\n          <Row>\n            <img className=\" mx-auto\" src=\"/assets/teikametrics/logo.svg\" alt=\"teikametrics logo\" />\n          </Row>\n        </section>\n\n        <section>\n          <Row>\n            <Col md={{ size: 5, offset: 2 }}>\n              <h1 className=\"h4 text-center text-md-left\">\n                <small className={'text-uppercase ' + (planIsYearly ? 'text-secondary' : 'text-primary')}>Our Simple Pricing Structure</small> <br />\n                <span className=\"display-4\">Select the plan that  matches your business</span>\n              </h1>\n            </Col>\n            <Col md={{ size: 4, offset: 1}} className=\"d-flex align-items-end justify-content-center\">\n              <div className=\"d-flex align-items-center\">\n                <span>Monthly Plan</span>\n                <Switch\n                  className=\"mx-2\"\n                  onClick={(e) => this.togglePlan(e)} on={this.state.planIsYearly} />\n                <span className={planIsYearly ? 'text-secondary' : 'text-muted'}>\n                  Yearly Plan - save 20%\n                </span>\n              </div>\n            </Col>\n          </Row>\n        </section>\n\n        <section>\n          <TeirSelection\n            planIsYearly={planIsYearly}\n            handleSelectPlan={(teir) => this.handleSelectPlan(teir)}>\n          </TeirSelection>\n        </section>\n\n        <section>\n          <Row>\n            <h2 className=\"mx-auto display-4 pb-3\">Are you an Agency?</h2>\n          </Row>\n          <Row>\n            <p className=\"mx-auto pb-3\">\n              We’d love to talk with you about your Sponsored Products needs!\n            </p>\n          </Row>\n          <Row>\n            <Button\n              outline\n              color={planIsYearly ? 'secondary' : 'primary'}\n              className=\"mx-auto\">\n              Contact us{' '}\n              <img\n                src={'/assets/teikametrics/arrows/' + (planIsYearly ? 'purple' : 'blue') + '_arrow.svg'}\n                alt=\"\"/>\n          </Button>\n          </Row>\n        </section>\n\n        <section>\n          <ProductFeatures></ProductFeatures>\n        </section>\n\n        <section>\n          <FeaturedSellers></FeaturedSellers>\n        </section>\n\n        <section>\n          <PageFooter planIsYearly={planIsYearly}></PageFooter>\n        </section>\n\n      </Container>\n    )\n  }\n\n  handleSelectPlan(teir) {\n    const teirId = teir.id,\n          planIsYearly = this.state.planIsYearly ? '1' : '0';\n\n    this.props.history.push(`/confirm/${planIsYearly}/${teirId}`)\n  }\n}\n\n\n\nexport default withRouter(TeikametricsIndexPage);\n","import React from 'react';\n\nimport { Button, Container, Alert } from 'reactstrap';\n\nimport TeirConfig from './config/teirConfig'\n\nclass TeikametricsConfirmPage extends React.Component {\n  state = {\n    planIsYearly: false,\n\n    teir: null,\n    error: false\n  }\n\n  componentDidMount () {\n    let { planIsYearly, teirId } = this.props.match.params;\n    // @NOTE: both are strings ...\n\n    planIsYearly = ((+planIsYearly) === 1)\n    teirId       = (+teirId)\n\n    const [teir] = TeirConfig.filter( t => t.id === teirId );\n\n    console.log('confirm page', { planIsYearly, teirId, teir })\n\n    if (!teir) {\n      return this.setState({\n        error: 'Error: Could not determine the selected plan teir'\n      })\n    }\n\n    return this.setState({\n      teir,\n      planIsYearly\n    })\n  }\n\n\n  render() {\n    const { error, teir, planIsYearly } = this.state;\n\n    if (!!error) {\n      return (\n        <Container className=\"p-5 text-center\">\n          <Alert color=\"danger\">\n            <h1 className=\"display-4\">{error}</h1>\n          </Alert>\n        </Container>\n      )\n    } else if (teir === null) {\n      return (\n        <div className=\"spinner-border mx-auto p-5\" role=\"status\"> </div>\n      )\n    }\n\n    return (\n      <Container className=\"py-5 text-center\">\n        <h1 className=\"display-1\">Confirmed</h1>\n        <Alert color=\"success\" className=\"mx-auto\">\n          <h2 className=\"m-0\">\n            {planIsYearly ? 'Yearly' : 'Monthly'}{' '}\n            <strong>{teir.title}</strong> plan at{' '}\n            <strong>${planIsYearly ? teir.price.yearly : teir.price.monthly}</strong>\n          </h2>\n        </Alert>\n        <Button href=\"/\" block outline color={planIsYearly ? 'secondary' : 'primary'}> {'<'} Pick a New Plan</Button>\n      </Container>\n    )\n  }\n}\n\nexport default TeikametricsConfirmPage;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport TeikametricsIndexPage from './components/teikametricsIndexPage';\nimport TeikametricsConfirmPage from './components/teikametricsConfirmPage';\n\nimport './styles/app.scss'\n\nconst App = () => (\n  <BrowserRouter>\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={TeikametricsIndexPage} />\n        <Route exact path=\"/confirm/:planIsYearly/:teirId\" component={TeikametricsConfirmPage} />\n      </Switch>\n    </div>\n  </BrowserRouter>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}